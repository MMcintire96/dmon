// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service-guide.proto

#ifndef PROTOBUF_INCLUDED_service_2dguide_2eproto
#define PROTOBUF_INCLUDED_service_2dguide_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_service_2dguide_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2dguide_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_service_2dguide_2eproto();
namespace hostService {
class TransmitPacket;
class TransmitPacketDefaultTypeInternal;
extern TransmitPacketDefaultTypeInternal _TransmitPacket_default_instance_;
class TransmitResponse;
class TransmitResponseDefaultTypeInternal;
extern TransmitResponseDefaultTypeInternal _TransmitResponse_default_instance_;
}  // namespace hostService
namespace google {
namespace protobuf {
template<> ::hostService::TransmitPacket* Arena::CreateMaybeMessage<::hostService::TransmitPacket>(Arena*);
template<> ::hostService::TransmitResponse* Arena::CreateMaybeMessage<::hostService::TransmitResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace hostService {

// ===================================================================

class TransmitPacket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hostService.TransmitPacket) */ {
 public:
  TransmitPacket();
  virtual ~TransmitPacket();

  TransmitPacket(const TransmitPacket& from);

  inline TransmitPacket& operator=(const TransmitPacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransmitPacket(TransmitPacket&& from) noexcept
    : TransmitPacket() {
    *this = ::std::move(from);
  }

  inline TransmitPacket& operator=(TransmitPacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransmitPacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransmitPacket* internal_default_instance() {
    return reinterpret_cast<const TransmitPacket*>(
               &_TransmitPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TransmitPacket* other);
  friend void swap(TransmitPacket& a, TransmitPacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransmitPacket* New() const final {
    return CreateMaybeMessage<TransmitPacket>(nullptr);
  }

  TransmitPacket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransmitPacket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransmitPacket& from);
  void MergeFrom(const TransmitPacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransmitPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Version = 6;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string IP = 7;
  void clear_ip();
  static const int kIPFieldNumber = 7;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string DeviceID = 8;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 8;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string hostName = 13;
  void clear_hostname();
  static const int kHostNameFieldNumber = 13;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // int64 MemoryUsed = 1;
  void clear_memoryused();
  static const int kMemoryUsedFieldNumber = 1;
  ::google::protobuf::int64 memoryused() const;
  void set_memoryused(::google::protobuf::int64 value);

  // int64 MemoryAvailable = 2;
  void clear_memoryavailable();
  static const int kMemoryAvailableFieldNumber = 2;
  ::google::protobuf::int64 memoryavailable() const;
  void set_memoryavailable(::google::protobuf::int64 value);

  // int64 MemoryTotal = 3;
  void clear_memorytotal();
  static const int kMemoryTotalFieldNumber = 3;
  ::google::protobuf::int64 memorytotal() const;
  void set_memorytotal(::google::protobuf::int64 value);

  // double CpuUsage = 4;
  void clear_cpuusage();
  static const int kCpuUsageFieldNumber = 4;
  double cpuusage() const;
  void set_cpuusage(double value);

  // double UpTime = 5;
  void clear_uptime();
  static const int kUpTimeFieldNumber = 5;
  double uptime() const;
  void set_uptime(double value);

  // int64 InboundBandwithBytes = 9;
  void clear_inboundbandwithbytes();
  static const int kInboundBandwithBytesFieldNumber = 9;
  ::google::protobuf::int64 inboundbandwithbytes() const;
  void set_inboundbandwithbytes(::google::protobuf::int64 value);

  // int64 OutboundBandwithBytes = 10;
  void clear_outboundbandwithbytes();
  static const int kOutboundBandwithBytesFieldNumber = 10;
  ::google::protobuf::int64 outboundbandwithbytes() const;
  void set_outboundbandwithbytes(::google::protobuf::int64 value);

  // int64 InboundBandwithPackets = 11;
  void clear_inboundbandwithpackets();
  static const int kInboundBandwithPacketsFieldNumber = 11;
  ::google::protobuf::int64 inboundbandwithpackets() const;
  void set_inboundbandwithpackets(::google::protobuf::int64 value);

  // int64 OutboundBandwithPackets = 12;
  void clear_outboundbandwithpackets();
  static const int kOutboundBandwithPacketsFieldNumber = 12;
  ::google::protobuf::int64 outboundbandwithpackets() const;
  void set_outboundbandwithpackets(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:hostService.TransmitPacket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::int64 memoryused_;
  ::google::protobuf::int64 memoryavailable_;
  ::google::protobuf::int64 memorytotal_;
  double cpuusage_;
  double uptime_;
  ::google::protobuf::int64 inboundbandwithbytes_;
  ::google::protobuf::int64 outboundbandwithbytes_;
  ::google::protobuf::int64 inboundbandwithpackets_;
  ::google::protobuf::int64 outboundbandwithpackets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2dguide_2eproto;
};
// -------------------------------------------------------------------

class TransmitResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hostService.TransmitResponse) */ {
 public:
  TransmitResponse();
  virtual ~TransmitResponse();

  TransmitResponse(const TransmitResponse& from);

  inline TransmitResponse& operator=(const TransmitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransmitResponse(TransmitResponse&& from) noexcept
    : TransmitResponse() {
    *this = ::std::move(from);
  }

  inline TransmitResponse& operator=(TransmitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransmitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransmitResponse* internal_default_instance() {
    return reinterpret_cast<const TransmitResponse*>(
               &_TransmitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TransmitResponse* other);
  friend void swap(TransmitResponse& a, TransmitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransmitResponse* New() const final {
    return CreateMaybeMessage<TransmitResponse>(nullptr);
  }

  TransmitResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransmitResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransmitResponse& from);
  void MergeFrom(const TransmitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransmitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool DidInsert = 1;
  void clear_didinsert();
  static const int kDidInsertFieldNumber = 1;
  bool didinsert() const;
  void set_didinsert(bool value);

  // int32 FrequencyAdjustment = 2;
  void clear_frequencyadjustment();
  static const int kFrequencyAdjustmentFieldNumber = 2;
  ::google::protobuf::int32 frequencyadjustment() const;
  void set_frequencyadjustment(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hostService.TransmitResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool didinsert_;
  ::google::protobuf::int32 frequencyadjustment_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2dguide_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TransmitPacket

// int64 MemoryUsed = 1;
inline void TransmitPacket::clear_memoryused() {
  memoryused_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TransmitPacket::memoryused() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.MemoryUsed)
  return memoryused_;
}
inline void TransmitPacket::set_memoryused(::google::protobuf::int64 value) {
  
  memoryused_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.MemoryUsed)
}

// int64 MemoryAvailable = 2;
inline void TransmitPacket::clear_memoryavailable() {
  memoryavailable_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TransmitPacket::memoryavailable() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.MemoryAvailable)
  return memoryavailable_;
}
inline void TransmitPacket::set_memoryavailable(::google::protobuf::int64 value) {
  
  memoryavailable_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.MemoryAvailable)
}

// int64 MemoryTotal = 3;
inline void TransmitPacket::clear_memorytotal() {
  memorytotal_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TransmitPacket::memorytotal() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.MemoryTotal)
  return memorytotal_;
}
inline void TransmitPacket::set_memorytotal(::google::protobuf::int64 value) {
  
  memorytotal_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.MemoryTotal)
}

// double CpuUsage = 4;
inline void TransmitPacket::clear_cpuusage() {
  cpuusage_ = 0;
}
inline double TransmitPacket::cpuusage() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.CpuUsage)
  return cpuusage_;
}
inline void TransmitPacket::set_cpuusage(double value) {
  
  cpuusage_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.CpuUsage)
}

// double UpTime = 5;
inline void TransmitPacket::clear_uptime() {
  uptime_ = 0;
}
inline double TransmitPacket::uptime() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.UpTime)
  return uptime_;
}
inline void TransmitPacket::set_uptime(double value) {
  
  uptime_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.UpTime)
}

// string Version = 6;
inline void TransmitPacket::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransmitPacket::version() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.Version)
  return version_.GetNoArena();
}
inline void TransmitPacket::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.Version)
}
#if LANG_CXX11
inline void TransmitPacket::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hostService.TransmitPacket.Version)
}
#endif
inline void TransmitPacket::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hostService.TransmitPacket.Version)
}
inline void TransmitPacket::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hostService.TransmitPacket.Version)
}
inline ::std::string* TransmitPacket::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:hostService.TransmitPacket.Version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransmitPacket::release_version() {
  // @@protoc_insertion_point(field_release:hostService.TransmitPacket.Version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransmitPacket::set_allocated_version(::std::string* version) {
  if (version != nullptr) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:hostService.TransmitPacket.Version)
}

// string IP = 7;
inline void TransmitPacket::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransmitPacket::ip() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.IP)
  return ip_.GetNoArena();
}
inline void TransmitPacket::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.IP)
}
#if LANG_CXX11
inline void TransmitPacket::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hostService.TransmitPacket.IP)
}
#endif
inline void TransmitPacket::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hostService.TransmitPacket.IP)
}
inline void TransmitPacket::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hostService.TransmitPacket.IP)
}
inline ::std::string* TransmitPacket::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:hostService.TransmitPacket.IP)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransmitPacket::release_ip() {
  // @@protoc_insertion_point(field_release:hostService.TransmitPacket.IP)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransmitPacket::set_allocated_ip(::std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:hostService.TransmitPacket.IP)
}

// string DeviceID = 8;
inline void TransmitPacket::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransmitPacket::deviceid() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.DeviceID)
  return deviceid_.GetNoArena();
}
inline void TransmitPacket::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.DeviceID)
}
#if LANG_CXX11
inline void TransmitPacket::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hostService.TransmitPacket.DeviceID)
}
#endif
inline void TransmitPacket::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hostService.TransmitPacket.DeviceID)
}
inline void TransmitPacket::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hostService.TransmitPacket.DeviceID)
}
inline ::std::string* TransmitPacket::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:hostService.TransmitPacket.DeviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransmitPacket::release_deviceid() {
  // @@protoc_insertion_point(field_release:hostService.TransmitPacket.DeviceID)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransmitPacket::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != nullptr) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:hostService.TransmitPacket.DeviceID)
}

// int64 InboundBandwithBytes = 9;
inline void TransmitPacket::clear_inboundbandwithbytes() {
  inboundbandwithbytes_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TransmitPacket::inboundbandwithbytes() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.InboundBandwithBytes)
  return inboundbandwithbytes_;
}
inline void TransmitPacket::set_inboundbandwithbytes(::google::protobuf::int64 value) {
  
  inboundbandwithbytes_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.InboundBandwithBytes)
}

// int64 OutboundBandwithBytes = 10;
inline void TransmitPacket::clear_outboundbandwithbytes() {
  outboundbandwithbytes_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TransmitPacket::outboundbandwithbytes() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.OutboundBandwithBytes)
  return outboundbandwithbytes_;
}
inline void TransmitPacket::set_outboundbandwithbytes(::google::protobuf::int64 value) {
  
  outboundbandwithbytes_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.OutboundBandwithBytes)
}

// int64 InboundBandwithPackets = 11;
inline void TransmitPacket::clear_inboundbandwithpackets() {
  inboundbandwithpackets_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TransmitPacket::inboundbandwithpackets() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.InboundBandwithPackets)
  return inboundbandwithpackets_;
}
inline void TransmitPacket::set_inboundbandwithpackets(::google::protobuf::int64 value) {
  
  inboundbandwithpackets_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.InboundBandwithPackets)
}

// int64 OutboundBandwithPackets = 12;
inline void TransmitPacket::clear_outboundbandwithpackets() {
  outboundbandwithpackets_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TransmitPacket::outboundbandwithpackets() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.OutboundBandwithPackets)
  return outboundbandwithpackets_;
}
inline void TransmitPacket::set_outboundbandwithpackets(::google::protobuf::int64 value) {
  
  outboundbandwithpackets_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.OutboundBandwithPackets)
}

// string hostName = 13;
inline void TransmitPacket::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransmitPacket::hostname() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitPacket.hostName)
  return hostname_.GetNoArena();
}
inline void TransmitPacket::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hostService.TransmitPacket.hostName)
}
#if LANG_CXX11
inline void TransmitPacket::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hostService.TransmitPacket.hostName)
}
#endif
inline void TransmitPacket::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hostService.TransmitPacket.hostName)
}
inline void TransmitPacket::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hostService.TransmitPacket.hostName)
}
inline ::std::string* TransmitPacket::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:hostService.TransmitPacket.hostName)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransmitPacket::release_hostname() {
  // @@protoc_insertion_point(field_release:hostService.TransmitPacket.hostName)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransmitPacket::set_allocated_hostname(::std::string* hostname) {
  if (hostname != nullptr) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:hostService.TransmitPacket.hostName)
}

// -------------------------------------------------------------------

// TransmitResponse

// bool DidInsert = 1;
inline void TransmitResponse::clear_didinsert() {
  didinsert_ = false;
}
inline bool TransmitResponse::didinsert() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitResponse.DidInsert)
  return didinsert_;
}
inline void TransmitResponse::set_didinsert(bool value) {
  
  didinsert_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitResponse.DidInsert)
}

// int32 FrequencyAdjustment = 2;
inline void TransmitResponse::clear_frequencyadjustment() {
  frequencyadjustment_ = 0;
}
inline ::google::protobuf::int32 TransmitResponse::frequencyadjustment() const {
  // @@protoc_insertion_point(field_get:hostService.TransmitResponse.FrequencyAdjustment)
  return frequencyadjustment_;
}
inline void TransmitResponse::set_frequencyadjustment(::google::protobuf::int32 value) {
  
  frequencyadjustment_ = value;
  // @@protoc_insertion_point(field_set:hostService.TransmitResponse.FrequencyAdjustment)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace hostService

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_service_2dguide_2eproto
